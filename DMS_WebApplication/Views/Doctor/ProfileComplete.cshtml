@model DMS_BOL.Validation_Classes.ValidateDoctor
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, shrink-to-fit=no" name="viewport">
    <title>DMS - Profile Complete</title>
    <link rel="stylesheet" href="~/assets/css/app.min.css">
    <link rel="stylesheet" href="~/assets/bundles/bootstrap-daterangepicker/daterangepicker.css">
    <link rel="stylesheet" href="~/assets/bundles/bootstrap-colorpicker/dist/css/bootstrap-colorpicker.min.css">
    <link rel="stylesheet" href="~/assets/bundles/select2/dist/css/select2.min.css">
    <link rel="stylesheet" href="~/assets/bundles/jquery-selectric/selectric.css">
    <link rel="stylesheet" href="~/assets/bundles/bootstrap-timepicker/css/bootstrap-timepicker.min.css">
    <link rel="stylesheet" href="~/assets/bundles/bootstrap-tagsinput/dist/bootstrap-tagsinput.css">
    <link rel="stylesheet" href="~/assets/css/style.css">
    <link rel="stylesheet" href="~/assets/css/components.css">
    <link rel="stylesheet" href="~/assets/css/custom.css">
    <link rel='shortcut icon' type='image/x-icon' href='~/assets/img/favicon.ico' />
    <link rel="stylesheet" href="~/assets/bundles/pretty-checkbox/pretty-checkbox.min.css">
    <script src="~/Scripts/jquery-3.2.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <style>
        .select2-container {
            width: 100% !important;
        }

        .main-content {
            padding-left: 20px;
            padding-right: 20px;
            padding-top: 30px;
            width: 100%;
            position: relative;
        }

        .form-group .control-label, .form-group > label {
            font-size: 13px !important;
        }

        .card-heading {
            font-size: 18px !important;
            color: #6777ef !important;
        }

        .card .card-header {
            border-bottom-color: #ededed !important;
        }

        .pretty.p-switch .state:before {
            border: 1px solid #28a745;
        }

        .pretty.p-switch .state label:after {
            background-color: #28a745 !important;
        }

        #labelExp {
            color: #28a745;
            font-weight: 700;
        }

        .loader {
            position: fixed;
            left: 0px;
            top: 0px;
            width: 100%;
            height: 100%;
            z-index: 9999;
            background: url(../../assets/img/loading.gif) 50% 50% no-repeat #f9f9f9;
            opacity: 0.5;
        }
    </style>
</head>

<body>
    <div id="loader" class="loader"></div>
    <div id="app">
        <div class="main-content">
            <div class="container p-0">
                <h2>Complete Your Profile</h2>
                <p style="font-size: 16px !important;"><strong>To complete</strong> your profile write something about you and add your qualification and timings to attract more patients.</p>
                @using (Ajax.BeginForm("ProfileComplete", "Doctor", new AjaxOptions() { HttpMethod = "POST", LoadingElementId = "loader", OnBegin = "CheckValidation", OnSuccess = "fnSuccessP" }, htmlAttributes: new { @id = "form1" }))
                {
                    <div class="card">
                        <div class="card-header">
                            <a class="card-link">
                                <strong class="card-heading"> Profile Information </strong>
                            </a>
                        </div>
                        <div class="card-body">
                            <div class="form-group">
                                <label>Work Phone Number</label>
                                @Html.ValidationMessageFor(model => model.DoctorWorkPhoneNumber, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.DoctorWorkPhoneNumber, new { htmlAttributes = new { placeholder = "Enter your work phone number", @class = "form-control", @tabindex = "0" } })
                            </div>
                            <div class="form-group">
                                <label>Years Of Experience</label>
                                @Html.ValidationMessageFor(model => model.DoctorYearsOfExperience, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.DoctorYearsOfExperience, new { htmlAttributes = new { placeholder = "Enter your years of experience", @class = "form-control", @tabindex = "1" } })
                            </div>
                            <div class="form-group">
                                <label>Specialization</label>
                                @Html.ValidationMessageFor(model => model.DoctorSpecialization, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.DoctorSpecialization, new { htmlAttributes = new { placeholder = "Enter your specialization", @class = "form-control", @tabindex = "2" } })
                            </div>
                            <div class="form-group">
                                <label>Awards and Achievements</label>
                                @Html.ValidationMessageFor(model => model.DoctorAwardsAndAchievements, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.DoctorAwardsAndAchievements, new { htmlAttributes = new { placeholder = "Enter your awards and achievements", @class = "form-control", @tabindex = "3" } })
                            </div>
                            <div class="form-group">
                                <label>About Me</label>
                                @Html.ValidationMessageFor(model => model.DoctorAboutMe, "", new { @class = "text-danger" })
                                @Html.TextAreaFor(model => model.DoctorAboutMe, htmlAttributes: new { placeholder = "Enter your about me", @class = "form-control", @tabindex = "4", @style = "height:150px !important" })
                            </div>
                            <div class="form-group">
                                <label>Response Time (In Minutes)</label>
                                @Html.ValidationMessageFor(model => model.DoctorResponseTime, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.DoctorResponseTime, new { htmlAttributes = new { placeholder = "Enter your response time", @class = "form-control", @tabindex = "5" } })
                            </div>
                            <div class="form-group">
                                <label>Select Offered Services</label>
                                @Html.ValidationMessageFor(model => model.Service, "", new { @class = "text-danger" })
                                @Html.DropDownListFor(model => model.Service, (IEnumerable<SelectListItem>)ViewBag.Service, htmlAttributes: new { @class = "form-control select2", @multiple = "", @tabindex = "6" })
                            </div>
                        </div>
                    </div>
                    @*<div class="card">
                            <div class="card-header">
                                <a class="card-link">
                                    <strong class="card-heading"> Services & Experience Information </strong>
                                </a>
                            </div>
                            <div class="card-body">
                            </div>
                        </div>*@
                    @*<div class="form-group">
                            <input type="submit" class="btn btn-primary btn-lg btn-block" value="Submit" tabindex="10" />
                        </div>*@
                }
                <div class="card">
                    <div class="card-header d-flex align-items-center justify-content-between">
                        <a class="card-link">
                            <strong class="card-heading">Experience Information </strong>
                        </a>
                        <div class="pretty p-switch p-fill">
                            <input type="checkbox" id="chkDoesExp" onchange="chkDoesExp()">
                            <div class="state p-danger">
                                <label id="labelExp">It Apply On Me</label>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div>
                            <div id="ExpDiv">
                            </div>
                            <button type="button" id="btnExp" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
                                Add Experience
                            </button>
                            <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="formModal"
                                 aria-hidden="true">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="formModal">Experience Details</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            @using (Ajax.BeginForm("InsertExp", "Doctor", new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "ExpDiv", LoadingElementId = "loader", OnSuccess = "ExpSuccess" }, htmlAttributes: new { @id = "Expform" }))
                                            {
                                                var hospitalInfo = new DMS_BOL.Validation_Classes.ValidateDoctorHospitalInfo();
                                                @Html.Partial("_AddExperience", hospitalInfo);
                                                <div class="form-group">
                                                    <input type="submit" class="btn btn-primary m-t-15 waves-effect" value="Submit" tabindex="12" />
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card">
                    <div class="card-header d-flex align-items-center justify-content-between">
                        <a class="card-link">
                            <strong class="card-heading">Offline Consultation Information </strong>
                        </a>
                        <div class="pretty p-switch p-fill">
                            <input type="checkbox" id="chkDoes1" onchange="chkDoes()">
                            <div class="state p-danger">
                                <label id="labelDoes1">It Apply On Me</label>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div>
                            <div id="OFCDDiv">
                            </div>
                            <button type="button" class="btn btn-primary" id="btnOFCD" onclick="OFCDOpen()">
                                Add Offline Consultation
                            </button>
                            @using (Ajax.BeginForm("InsertOfflineConsultation", "Doctor", new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "OFCDDiv", LoadingElementId = "loader", OnSuccess = "OFCDSuccess", OnBegin = "OFCDDayCheck" }, htmlAttributes: new { @id = "OFCDform" }))
                            {
                                var hospitalInfo = new DMS_BOL.Validation_Classes.ValidateDoctorOfflineConsultaionDetails();
                                @Html.Partial("_AddOfflineConsultation", hospitalInfo);
                                <div>
                                    <input type="button" class="btn btn-danger m-t-15 waves-effect" value="Cancel" onclick="btnCancel()" tabindex="35" />
                                    <input type="submit" class="btn btn-primary m-t-15 waves-effect Isdisabled" value="Submit" tabindex="36" />
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="card">
                    <div class="card-header d-flex align-items-center justify-content-between">
                        <a class="card-link">
                            <strong class="card-heading">Online Consultation Information </strong>
                        </a>
                    </div>
                    <div class="card-body">
                        <div>
                            <div id="OCDDiv">
                            </div>
                            <button type="button" class="btn btn-primary" id="btnOCD" onclick="OCDOpen()">
                                Add Online Consultation
                            </button>
                            @using (Ajax.BeginForm("InsertOnlineConsultation", "Doctor", new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "OCDDiv", LoadingElementId = "loader", OnSuccess = "OCDSuccess", OnBegin = "OCDDayCheck" }, htmlAttributes: new { @id = "OCDform" }))
                            {
                                var hospitalInfo = new DMS_BOL.Validation_Classes.ValidateDoctorOnlineConsultaionDetails();
                                @Html.Partial("_AddOnlineConsultation", hospitalInfo);
                                <div>
                                    <input type="button" class="btn btn-danger m-t-15 waves-effect" value="Cancel" onclick="btnOCDCancel()" tabindex="37" />
                                    <input type="submit" class="btn btn-primary m-t-15 waves-effect OCDIsdisabled" value="Submit" tabindex="38" />
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <button form="form1" class="btn btn-primary btn-lg btn-block" type="submit">Submit</button>
                </div>
            </div>
        </div>
        <footer class="main-footer">
            <div class="footer-left">
                <a href="#">DMS - PORTAL</a>
            </div>
            <div class="footer-right">
            </div>
        </footer>
    </div>
    <script src="~/assets/js/app.min.js"></script>
    <script src="~/assets/bundles/cleave-js/dist/addons/cleave-phone.us.js"></script>
    <script src="~/assets/bundles/jquery-pwstrength/jquery.pwstrength.min.js"></script>
    <script src="~/assets/bundles/bootstrap-daterangepicker/daterangepicker.js"></script>
    <script src="~/assets/bundles/bootstrap-colorpicker/dist/js/bootstrap-colorpicker.min.js"></script>
    <script src="~/assets/bundles/bootstrap-timepicker/js/bootstrap-timepicker.min.js"></script>
    <script src="~/assets/bundles/bootstrap-tagsinput/dist/bootstrap-tagsinput.min.js"></script>
    <script src="~/assets/bundles/select2/dist/js/select2.full.min.js"></script>
    <script src="~/assets/bundles/jquery-selectric/jquery.selectric.min.js"></script>
    <script src="~/assets/js/scripts.js"></script>
    <script src="~/assets/js/custom.js"></script>
    <script src="~/assets/bundles/sweetalert/sweetalert.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#OFCDform").hide();
            $("#OCDform").hide();
        });

        function OFCDOpen() {
            $("#OFCDform").show();
            $("#btnOFCD").hide();
        }

        function OCDOpen() {
            $("#OCDform").show();
            $("#btnOCD").hide();
        }

        function btnCancel() {
            $("#OFCDform").hide();
            $("#btnOFCD").show();
        }

        function btnOCDCancel() {
            $("#OCDform").hide();
            $("#btnOCD").show();
        }

        function ExpSuccess() {
            $('#exampleModal').modal('hide');
            $("#Expform").trigger("reset");
        }

        function fnSuccessP() {
            $("#loader").show();
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetTempData", "Doctor")",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    $("#loader").hide();
                    var Eval = response;
                    alert('Your profile is completed successfully!');
                    if (Eval == 1) {
                        swal('Hurray', 'Your profile is completed successfully!', 'success');
                        window.location.href = '/Account/Index';
                    }
                    else if (Eval == 5) {
                        swal('Error Occured', 'Email already exists. Please ensure to enter not used email account again!', 'error');
                    }
                    else if (Eval == 2) {
                        swal('Error Occured', 'Phone Number already exists. Please ensure to enter not used phone number again!', 'error');
                    }
                    else if (Eval == 3) {
                        swal('Error Occured', 'Error on completing profile. Please try again later!', 'error');
                    }
                    else if (Eval == 4) {
                        swal('Error Occured', 'Error on completing profile!', 'error');
                    }
                }
            });
        }

        function chkDoesExp() {
            var remember = document.getElementById("chkDoesExp");
            if (remember.checked) {
                document.getElementById("labelExp").innerText = "Not Apply On Me";
                document.getElementById("labelExp").style.color = "#d9534f";
                $("#ExpDiv").hide();
                $("#btnExp").prop('disabled', true);
            } else {
                document.getElementById("labelExp").innerText = "It Apply On Me";
                document.getElementById("labelExp").style.color = "#28a745";
                $("#ExpDiv").show();
                $("#btnExp").prop('disabled', false);
            }
        }

        function ExpCheck() {
            var IsAvalailble = false;
            var remember = document.getElementById("chkDoesExp");
            if (!remember.checked) {
                if (document.getElementsByClassName("EXP_NO").length > 0) {
                    IsAvalailble = true;
                    if (!IsAvalailble) {
                        swal('Error Occured', 'Please add your experience or unchecked \'It Apply On Me\' if you don\'t have any experience!', 'error');
                        return false;
                    } else {
                        return true;
                    }
                }
                else {
                    swal('Error Occured', 'Please add your experience or unchecked \'It Apply On Me\' if you don\'t have any experience!', 'error');
                    return false;
                }
            } else {
                return true;
            }
        }

        function OFCDCheck() {
            var IsAvalailble = false;
            var remember = document.getElementById("chkDoes1");
            if (!remember.checked) {
                if (document.getElementsByClassName("OFCD_NO").length > 0) {
                    IsAvalailble = true;
                    if (!IsAvalailble) {
                        swal('Error Occured', 'Please add places for offline consultation or unchecked \'It Apply On Me\' if you don\'t do offline consultation!', 'error');
                        return false;
                    } else {
                        return true;
                    }
                }
                else {
                    swal('Error Occured', 'Please add places for offline consultation or unchecked \'It Apply On Me\' if you don\'t do offline consultation!', 'error');
                    return false;
                }
            } else {
                return true;
            }
        }

        function OCDCheck() {
            if (document.getElementsByClassName("OCD_NO").length <= 0) {
                swal('Error Occured', 'Please add places for online consultation or unchecked \'It Apply On Me\' if you don\'t do online consultation!', 'error');
                return false;
            } else {
                return true;
            }
        }

        function CheckValidation() {
            var expCheck = ExpCheck();
            var ofcdCheck = OFCDCheck();
            var ocdCheck = OCDCheck();
            if (!expCheck || !ofcdCheck || !ocdCheck) {
                return false;
            }
        }

        function OFCDDayCheck() {
            var IsAvalailble = false;
            for (var i = 1; i <= 7; i++) {
                var remember = document.getElementById("checkbox" + i);
                if (!remember.checked) {
                    IsAvalailble = true;
                }
            }
            if (!IsAvalailble) {
                swal('Error Occured', 'Please select minimum one day for consultation!', 'error');
                return false;
            }
        }

        function OCDDayCheck() {
            var IsAvalailble = false;
            for (var i = 1; i <= 7; i++) {
                var remember = document.getElementById("OCDcheckbox" + i);
                if (!remember.checked) {
                    IsAvalailble = true;
                }
            }
            if (!IsAvalailble) {
                swal('Error Occured', 'Please select minimum one day for consultation!', 'error');
                return false;
            }
        }

        function OFCDSuccess() {
            $("#OFCDform").trigger("reset");
            $("#OFCDform").hide();
            $("#btnOFCD").show();
            $('#City').empty();
            $('#Area').empty();
            $('#CompleteAddress').empty();
            $('#CityD').hide();
            $('#AreaD').hide();
            $('#AddressD').hide();
            var inputs = document.getElementsByClassName("Isdisabled");
            for (var i = 0; i < inputs.length; i++) {
                inputs[i].disabled = false;
            }

            for (var i = 1; i <= 7; i++) {
                document.getElementById("label" + i).innerText = "Available";
                document.getElementsByClassName("time" + i)[0].disabled = false;
                document.getElementsByClassName("time" + i)[1].disabled = false;
                document.getElementById("label" + i).style.color = "#28a745";
            }
        }

        function OCDSuccess() {
            $("#OCDform").trigger("reset");
            $("#OCDform").hide();
            var inputs = document.getElementsByClassName("OCDIsdisabled");
            for (var i = 0; i < inputs.length; i++) {
                inputs[i].disabled = false;
            }
            for (var i = 1; i <= 7; i++) {
                document.getElementById("OCDlabel" + i).innerText = "Available";
                document.getElementsByClassName("OCDtime" + i)[0].disabled = false;
                document.getElementsByClassName("OCDtime" + i)[1].disabled = false;
                document.getElementById("OCDlabel" + i).style.color = "#28a745";
            }
        }

        function validate() {
            var remember = document.getElementById('WEX_IsWorking');
            if (remember.checked) {
                document.getElementById("ToDateID").style.display = "none";
            } else {
                document.getElementById("ToDateID").style.display = "block";
            }
        }

        function deleteExp(expID) {
            swal({
                title: 'Are you sure?',
                text: 'Once deleted, you will not be able to recover this Experience detail!',
                icon: 'warning',
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        $("#loader").show();
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("DeleteExp", "Doctor")",
                            data: JSON.stringify({ ExpID: expID }),
                            contentType: "application/json; charset=utf-8",
                            success: function (response) {
                                $("#loader").hide();
                                $("#ExpDiv").empty();
                                $("#ExpDiv").append(response);
                                swal('Poof! Your Experience detail has been deleted!', {
                                    icon: 'success',
                                });
                            }
                        });
                    } else {
                        swal('Your experience details is safe!');
                    }
                });
        }

        function deleteOfcd(ofcdID) {
            swal({
                title: 'Are you sure?',
                text: 'Once deleted, you will not be able to recover this Offline Consultation detail!',
                icon: 'warning',
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        $("#loader").show();
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("DeleteOfflineConsultation", "Doctor")",
                            data: JSON.stringify({ OfcdID: ofcdID }),
                            contentType: "application/json; charset=utf-8",
                            success: function (response) {
                                $("#loader").hide();
                                $("#OFCDDiv").empty();
                                $("#OFCDDiv").append(response);
                                swal('Poof! Your Offline Consultation detail has been deleted!', {
                                    icon: 'success',
                                });
                            }
                        });
                    } else {
                        swal('Your offline consultation details is safe!');
                    }
                });
        }

        function deleteOcd(ocdID) {
            swal({
                title: 'Are you sure?',
                text: 'Once deleted, you will not be able to recover this Online Consultation detail!',
                icon: 'warning',
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        $("#loader").show();
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("DeleteOnlineConsultation", "Doctor")",
                            data: JSON.stringify({ OcdID: ocdID }),
                            contentType: "application/json; charset=utf-8",
                            success: function (response) {
                                $("#loader").hide();
                                $("#OCDDiv").empty();
                                $("#btnOCD").show();
                                $("#OCDDiv").append(response);
                                swal('Poof! Your Online Consultation detail has been deleted!', {
                                    icon: 'success',
                                });
                            }
                        });
                    } else {
                        swal('Your online consultation details is safe!');
                    }
                });
        }

    </script>
</body>
</html>