@model DMS_BOL.Validation_Classes.ValidateDoctor

@{
    ViewBag.Title = "DMS - Profile Settings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (User.Identity.IsAuthenticated)
{
    <link type="text/css" rel="stylesheet" href="~/assets/css/image-uploader.min.css">
    <script type="text/javascript" src="~/assets/js/image-uploader.min.js"></script>
    <link rel="stylesheet" href="~/assets/bundles/pretty-checkbox/pretty-checkbox.min.css">
    <script src="~/assets/bundles/sweetalert/sweetalert.min.js"></script>
    <script>
        function loadProfile(event) {
            var files = event.target.files;
            for (var i = 0; i < files.length; i++) {
                $("#dynamicImage").attr("src", URL.createObjectURL(event.target.files[i]));
            }
        }
    </script>
    <style>
        .select2-container {
            width: 100% !important;
        }

        .custom-file-upload {
            background-color: #7a88f1;
            border-radius: 25px;
            border: 1px solid #7a8aff;
            display: inline-block;
            padding: 6px 12px;
            cursor: pointer;
            text-align: center;
            width: 8rem;
            color: #fff !important;
            margin-top: 3px;
        }

        .pretty.p-switch .state:before {
            border: 1px solid #28a745;
        }

        .pretty.p-switch .state label:after {
            background-color: #28a745 !important;
        }

        .loader {
            position: fixed;
            left: 0px;
            top: 0px;
            width: 100%;
            height: 100%;
            z-index: 9999;
            background: url(../../assets/img/loading.gif) 50% 50% no-repeat #f9f9f9;
            opacity: 0.5;
        }

        .dynamicImage {
            height: 150px !important;
            width: 150px !important;
            margin: 10px !important;
            border: 2px solid #ededed !important;
        }

        #dynamicImage {
            background: #f8f8f8;
            border: 1px solid #ededed;
            border-radius: 2px;
        }

        #labelExp {
            color: #28a745;
            font-weight: 700;
        }
    </style>
    <div id="loader" class="loader"></div>
    <div class="row">
        <div class="col-12 col-sm-12 col-md-10 col-lg-10 col-xl-10">
            @using (Ajax.BeginForm("Settings", "Doctor", new AjaxOptions() { HttpMethod = "POST", LoadingElementId = "loader", OnBegin = "CheckValidation", OnSuccess = "fnSuccessP" }, htmlAttributes: new { @id = "formS", @enctype = "multipart/form-data" }))
            {
                <div class="card card-primary">
                    <div class="card-body">
                        <div class="form-group" style=" display: flex; flex-direction: column-reverse; align-items: center;">
                            <label for="choose-file" class="custom-file-upload" id="choose-file-label">
                                Change Avatar
                            </label>
                            <input name="file" type="file" id="choose-file" required="required"
                                   accept="image/png,image/jpg,image/jpeg" onchange="loadProfile(event)" style="display: none !important;" />
                            @if (Session["UserImage"] != null)
                            {
                                <img id="dynamicImage" src="@Url.Content(Session["UserImage"].ToString())" alt="Profile Image" width="120" height="120" style="border-radius: 50%;" />
                            }
                        </div>
                        <div class="row">
                            <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6">
                                <label>First Name</label>
                                @Html.ValidationMessageFor(model => model.UserFirstName, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.UserFirstName, new { htmlAttributes = new { placeholder = "Enter your first name", @class = "form-control" } })
                            </div>
                            <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6">
                                <label>Last Name</label>
                                @Html.ValidationMessageFor(model => model.UserLastName, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.UserLastName, new { htmlAttributes = new { placeholder = "Enter your last name", @class = "form-control" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6">
                                <label>Phone Number</label>
                                @Html.ValidationMessageFor(model => model.UserUpdatePhoneNumber, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.UserUpdatePhoneNumber, new { htmlAttributes = new { placeholder = "Enter your phone number", @class = "form-control" } })
                            </div>
                            <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6">
                                <label>Email Address</label>
                                @Html.ValidationMessageFor(model => model.UserUpdateEmail, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.UserUpdateEmail, new { htmlAttributes = new { placeholder = "Enter your email address", @class = "form-control" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6">
                                <label>Work Phone Number</label>
                                @Html.ValidationMessageFor(model => model.DoctorWorkPhoneNumber, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.DoctorWorkPhoneNumber, new { htmlAttributes = new { placeholder = "Enter your work phone number", @class = "form-control" } })
                            </div>
                            <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6">
                                <label>Gender</label>
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                <div>
                                    <div class="custom-control custom-radio d-inline-block pr-3">
                                        @Html.RadioButtonFor(model => model.Gender, "1", htmlAttributes: new { @class = "custom-control-input", @id = "customRadio1" })
                                        <label class="custom-control-label" for="customRadio1">Male</label>
                                    </div>
                                    <div class="custom-control custom-radio d-inline-block">
                                        @Html.RadioButtonFor(model => model.Gender, "2", htmlAttributes: new { @class = "custom-control-input", @id = "customRadio2" })
                                        <label class="custom-control-label" for="customRadio2">Female</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6">
                                <label>Password</label>
                                @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { placeholder = "Enter your secure password", @class = "form-control", @type = "password" } })
                            </div>
                            <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6">
                                <label>Confirm Password</label>
                                @Html.ValidationMessageFor(model => model.ConfirmPassowrd, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.ConfirmPassowrd, new { htmlAttributes = new { placeholder = "Enter your secure password", @class = "form-control", @type = "password" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6">
                                <label>State</label>
                                @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
                                @Html.DropDownListFor(model => model.StateID, (IEnumerable<SelectListItem>)ViewBag.State, htmlAttributes: new { @class = "form-control select2" })
                            </div>
                            <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6" id="CityDS">
                                <label>City</label>
                                @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                                @Html.DropDownListFor(model => model.CityID, (IEnumerable<SelectListItem>)ViewBag.City, htmlAttributes: new { @class = "form-control select2" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6" id="AreaDS">
                                <label>Area</label>
                                @Html.ValidationMessageFor(model => model.AreaID, "", new { @class = "text-danger" })
                                @Html.DropDownListFor(model => model.AreaID, (IEnumerable<SelectListItem>)ViewBag.Zone, htmlAttributes: new { @class = "form-control select2" })
                            </div>
                            <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6" id="AddressDS">
                                <label>Complete Address</label>
                                @Html.ValidationMessageFor(model => model.CompleteAddress, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.CompleteAddress, new { htmlAttributes = new { placeholder = "Enter your complete address", @class = "form-control", @id= "CompleteAddressS" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6">
                                <label>Years Of Experience</label>
                                @Html.ValidationMessageFor(model => model.DoctorYearsOfExperience, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.DoctorYearsOfExperience, new { htmlAttributes = new { placeholder = "Enter your years of experience", @class = "form-control" } })
                            </div>
                            <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6">
                                <label>Specialization</label>
                                @Html.ValidationMessageFor(model => model.DoctorSpecialization, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.DoctorSpecialization, new { htmlAttributes = new { placeholder = "Enter your specialization", @class = "form-control" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6">
                                <label>Awards and Achievements</label>
                                @Html.ValidationMessageFor(model => model.DoctorAwardsAndAchievements, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.DoctorAwardsAndAchievements, new { htmlAttributes = new { placeholder = "Enter your awards and achievements", @class = "form-control" } })
                            </div>
                            <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6">
                                <label>Response Time (In Minutes)</label>
                                @Html.ValidationMessageFor(model => model.DoctorResponseTime, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.DoctorResponseTime, new { htmlAttributes = new { placeholder = "Enter your response time", @class = "form-control" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-sm-12 col-md-12 col-lg-12 col-xl-12 col-xxl-12">
                                <label class="d-flex justify-content-between align-items-center">
                                    About Me
                                    <span><span id="textWordCount">0</span>/1000</span>
                                </label>
                                @Html.ValidationMessageFor(model => model.DoctorAboutMe, "", new { @class = "text-danger mb-2" })
                                @Html.TextAreaFor(model => model.DoctorAboutMe, htmlAttributes: new { placeholder = "Enter your about me", @class = "form-control", @style = "height:150px !important;text-align: justify !important" })
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div class="card">
                <div class="card-header d-flex align-items-center justify-content-between">
                    <a class="card-link">
                        <strong class="card-heading">Experience Information </strong>
                    </a>
                    <div class="pretty p-switch p-fill">
                        <input type="checkbox" id="chkDoesExp" onchange="chkDoesExp()">
                        <div class="state p-danger">
                            <label id="labelExp">It Apply On Me</label>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div>
                        <div id="ExpDiv">
                            @Html.Partial("_ShowExperience", Session["ExperienceList"])
                        </div>
                        <button type="button" class="btn btn-primary" id="btnExp" onclick="ExpOpen()">
                            Add Experience
                        </button>
                        @using (Ajax.BeginForm("InsertExp", "Doctor", new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "ExpDiv", LoadingElementId = "loader", OnSuccess = "ExpSuccess" }, htmlAttributes: new { @id = "Expform" }))
                        {
                            var hospitalInfo = new DMS_BOL.Validation_Classes.ValidateDoctorHospitalInfo();
                            @Html.Partial("_AddExperience", hospitalInfo);
                            <div class="form-group">
                                <input type="button" class="btn btn-danger m-t-15 waves-effect" value="Cancel" onclick="btnCancelExp()" tabindex="35" />
                                <input type="submit" class="btn btn-primary m-t-15 waves-effect" value="Submit" tabindex="12" />
                            </div>
                        }

                    </div>
                </div>
            </div>
            <div class="card">
                <div class="card-header d-flex align-items-center justify-content-between">
                    <a class="card-link">
                        <strong class="card-heading">Offline Consultation Information </strong>
                    </a>
                    <div class="pretty p-switch p-fill">
                        <input type="checkbox" id="chkDoes1" onchange="chkDoes()">
                        <div class="state p-danger">
                            <label id="labelDoes1">It Apply On Me</label>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div>
                        <div id="OFCDDiv">
                            @Html.Partial("_ShowOfflineConsultation", Session["OFCDList"])
                        </div>
                        <button type="button" class="btn btn-primary" id="btnOFCD" onclick="OFCDOpen()">
                            Add Offline Consultation
                        </button>
                        @using (Ajax.BeginForm("InsertOfflineConsultation", "Doctor", new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "OFCDDiv", LoadingElementId = "loader", OnSuccess = "OFCDSuccess", OnBegin = "OFCDDayCheck" }, htmlAttributes: new { @id = "OFCDform" }))
                        {
                            var hospitalInfo = new DMS_BOL.Validation_Classes.ValidateDoctorOfflineConsultaionDetails();
                            @Html.Partial("_AddOfflineConsultation", hospitalInfo);
                            <div>
                                <input type="button" class="btn btn-danger m-t-15 waves-effect" value="Cancel" onclick="btnCancel()" tabindex="35" />
                                <input type="submit" class="btn btn-primary m-t-15 waves-effect Isdisabled" value="Submit" tabindex="36" />
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="card">
                <div class="card-header d-flex align-items-center justify-content-between">
                    <a class="card-link">
                        <strong class="card-heading">Online Consultation Information </strong>
                    </a>
                </div>
                <div class="card-body">
                    <div>
                        <div id="OCDDiv">
                            @Html.Partial("_ShowOnlineConsultation", Session["OCDList"])
                        </div>
                        <button type="button" class="btn btn-primary" id="btnOCD" onclick="OCDOpen()">
                            Add Online Consultation
                        </button>
                        @using (Ajax.BeginForm("InsertOnlineConsultation", "Doctor", new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "OCDDiv", LoadingElementId = "loader", OnSuccess = "OCDSuccess", OnBegin = "OCDDayCheck" }, htmlAttributes: new { @id = "OCDform" }))
                        {
                            var hospitalInfo = new DMS_BOL.Validation_Classes.ValidateDoctorOnlineConsultaionDetails();
                            @Html.Partial("_AddOnlineConsultation", hospitalInfo);
                            <div>
                                <input type="button" class="btn btn-danger m-t-15 waves-effect" value="Cancel" onclick="btnOCDCancel()" tabindex="37" />
                                <input type="submit" class="btn btn-primary m-t-15 waves-effect OCDIsdisabled" value="Submit" tabindex="38" />
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="form-group">
                <button form="formS" class="btn btn-primary btn-lg btn-block" type="submit">Save</button>
            </div>
        </div>
    </div>
    <script>
        $(document).ready(function () {

            $("#OFCDform").hide();
            $("#OCDform").hide();
            $("#Expform").hide();

            textCount();

            function textCount() {
                var currentString = $("#DoctorAboutMe").val();
                $("#textWordCount").text(currentString.length);
            }

            $('#choose-file').change(function () {
                var file = $('#choose-file')[0].files[0].name;
                $('#choose-file-label').text(file);
            });

            $("#DoctorAboutMe").on('input', function () {
                var currentString = $("#DoctorAboutMe").val();
                if (currentString.length >= 1000) {
                    $("#textWordCount").css('color', '#fc544b');
                }
                $("#textWordCount").text(currentString.length);
            });

            $("#StateID").change(function () {
                var StateId = $(this).val();
                $(".loader").show();
                $.ajax({
                    type: "post",
                    url: "/Account/GetCityList?StateId=" + StateId,
                    contentType: "html",
                    success: function (response) {
                        $("#CityID").empty();
                        $("#AreaID").empty();
                        $('#AreaDS').hide();
                        $('#AddressDS').hide();
                        $("#CityID").append(response);
                        $('#CityDS').show();
                        $(".loader").hide();
                    }
                })
            });

            $("#CityID").change(function () {
                var CityId = $(this).val();
                $(".loader").show();
                $.ajax({
                    type: "post",
                    url: "/Account/GetZoneList?CityId=" + CityId,
                    contentType: "html",
                    success: function (response) {
                        $("#AreaID").empty();
                        $("#AreaID").append(response);
                        $('#AreaDS').show();
                        $(".loader").hide();
                    }
                })
            });

            $("#AreaID").change(function () {
                var AreaId = $(this).val();
                $(".loader").show();
                if (AreaId > 0) {
                    $('#AddressDS').show();
                    $(".loader").hide();
                }
            });
        });

        function OFCDOpen() {
            $("#OFCDform").show();
            $("#btnOFCD").hide();
        }

        function ExpOpen() {
            $("#Expform").trigger("reset");
            $("#Expform").show();
            $("#btnExp").hide();
        }

        function OCDOpen() {
            $("#OCDform").show();
            $("#btnOCD").hide();
        }

        function btnCancel() {
            $("#OFCDform").hide();
            $("#btnOFCD").show();
        }

        function btnOCDCancel() {
            $("#OCDform").hide();
            $("#btnOCD").show();
        }

        function btnCancelExp() {
            $("#Expform").hide();
            $("#btnExp").show();
        }

        function fnSuccessP() {
            $("#loader").show();
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetTempData", "Doctor")",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    $("#loader").hide();
                    var Eval = response;
                    alert('Your profile is completed successfully!');
                    if (Eval == 1) {
                        swal('Hurray', 'Your profile is completed successfully!', 'success');
                        window.location.href = '/Account/Index';
                    }
                    else if (Eval == 5) {
                        swal('Error Occured', 'Email already exists. Please ensure to enter not used email account again!', 'error');
                    }
                    else if (Eval == 2) {
                        swal('Error Occured', 'Phone Number already exists. Please ensure to enter not used phone number again!', 'error');
                    }
                    else if (Eval == 3) {
                        swal('Error Occured', 'Error on completing profile. Please try again later!', 'error');
                    }
                    else if (Eval == 4) {
                        swal('Error Occured', 'Error on completing profile!', 'error');
                    }
                }
            });
        }

        function chkDoesExp() {
            var remember = document.getElementById("chkDoesExp");
            if (remember.checked) {
                document.getElementById("labelExp").innerText = "Not Apply On Me";
                document.getElementById("labelExp").style.color = "#d9534f";
                $("#ExpDiv").hide();
                $("#btnExp").prop('disabled', true);
            } else {
                document.getElementById("labelExp").innerText = "It Apply On Me";
                document.getElementById("labelExp").style.color = "#28a745";
                $("#ExpDiv").show();
                $("#btnExp").prop('disabled', false);
            }
        }

        function ExpCheck() {
            var IsAvalailble = false;
            var remember = document.getElementById("chkDoesExp");
            if (!remember.checked) {
                if (document.getElementsByClassName("EXP_NO").length > 0) {
                    IsAvalailble = true;
                    if (!IsAvalailble) {
                        swal('Error Occured', 'Please add your experience or unchecked \'It Apply On Me\' if you don\'t have any experience!', 'error');
                        return false;
                    } else {
                        return true;
                    }
                }
                else {
                    swal('Error Occured', 'Please add your experience or unchecked \'It Apply On Me\' if you don\'t have any experience!', 'error');
                    return false;
                }
            } else {
                return true;
            }
        }

        function OFCDCheck() {
            var IsAvalailble = false;
            var remember = document.getElementById("chkDoes1");
            if (!remember.checked) {
                if (document.getElementsByClassName("OFCD_NO").length > 0) {
                    IsAvalailble = true;
                    if (!IsAvalailble) {
                        swal('Error Occured', 'Please add places for offline consultation or unchecked \'It Apply On Me\' if you don\'t do offline consultation!', 'error');
                        return false;
                    } else {
                        return true;
                    }
                }
                else {
                    swal('Error Occured', 'Please add places for offline consultation or unchecked \'It Apply On Me\' if you don\'t do offline consultation!', 'error');
                    return false;
                }
            } else {
                return true;
            }
        }

        function OCDCheck() {
            if (document.getElementsByClassName("OCD_NO").length <= 0) {
                swal('Error Occured', 'Please add places for online consultation or unchecked \'It Apply On Me\' if you don\'t do online consultation!', 'error');
                return false;
            } else {
                return true;
            }
        }

        function CheckValidation() {
            var expCheck = ExpCheck();
            var ofcdCheck = OFCDCheck();
            var ocdCheck = OCDCheck();
            if (!expCheck || !ofcdCheck || !ocdCheck) {
                return false;
            }
        }

        function OFCDDayCheck() {
            var IsAvalailble = false;
            for (var i = 1; i <= 7; i++) {
                var remember = document.getElementById("checkbox" + i);
                if (!remember.checked) {
                    IsAvalailble = true;
                }
            }
            if (!IsAvalailble) {
                swal('Error Occured', 'Please select minimum one day for consultation!', 'error');
                return false;
            }
        }

        function OCDDayCheck() {
            var IsAvalailble = false;
            for (var i = 1; i <= 7; i++) {
                var remember = document.getElementById("OCDcheckbox" + i);
                if (!remember.checked) {
                    IsAvalailble = true;
                }
            }
            if (!IsAvalailble) {
                swal('Error Occured', 'Please select minimum one day for consultation!', 'error');
                return false;
            }
        }

        function ExpSuccess() {
            $("#Expform").trigger("reset");
            $("#Expform").hide();
            $("#btnExp").show();
        }

        function OFCDSuccess() {
            $("#OFCDform").trigger("reset");
            $("#OFCDform").hide();
            $("#btnOFCD").show();
            $('#City').empty();
            $('#Area').empty();
            $('#CompleteAddress').empty();
            $('#CityDS').hide();
            $('#AreaDS').hide();
            $('#AddressDS').hide();
            var inputs = document.getElementsByClassName("Isdisabled");
            for (var i = 0; i < inputs.length; i++) {
                inputs[i].disabled = false;
            }

            for (var i = 1; i <= 7; i++) {
                document.getElementById("label" + i).innerText = "Available";
                document.getElementsByClassName("time" + i)[0].disabled = false;
                document.getElementsByClassName("time" + i)[1].disabled = false;
                document.getElementById("label" + i).style.color = "#28a745";
            }
        }

        function OCDSuccess() {
            $("#OCDform").trigger("reset");
            $("#OCDform").hide();
            var inputs = document.getElementsByClassName("OCDIsdisabled");
            for (var i = 0; i < inputs.length; i++) {
                inputs[i].disabled = false;
            }
            for (var i = 1; i <= 7; i++) {
                document.getElementById("OCDlabel" + i).innerText = "Available";
                document.getElementsByClassName("OCDtime" + i)[0].disabled = false;
                document.getElementsByClassName("OCDtime" + i)[1].disabled = false;
                document.getElementById("OCDlabel" + i).style.color = "#28a745";
            }
        }

        function validate() {
            var remember = document.getElementById('WEX_IsWorking');
            if (remember.checked) {
                document.getElementById("ToDateID").style.display = "none";
            } else {
                document.getElementById("ToDateID").style.display = "block";
            }
        }

        function deleteExp(expID) {
            swal({
                title: 'Are you sure?',
                text: 'Once deleted, you will not be able to recover this Experience detail!',
                icon: 'warning',
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        $("#loader").show();
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("DeleteExp", "Doctor")",
                            data: JSON.stringify({ ExpID: expID }),
                            contentType: "application/json; charset=utf-8",
                            success: function (response) {
                                $("#loader").hide();
                                $("#ExpDiv").empty();
                                $("#ExpDiv").append(response);
                                swal('Poof! Your Experience detail has been deleted!', {
                                    icon: 'success',
                                });
                            }
                        });
                    } else {
                        swal('Your experience details is safe!');
                    }
                });
        }

        function deleteOfcd(ofcdID) {
            swal({
                title: 'Are you sure?',
                text: 'Once deleted, you will not be able to recover this Offline Consultation detail!',
                icon: 'warning',
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        $("#loader").show();
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("DeleteOfflineConsultation", "Doctor")",
                            data: JSON.stringify({ OfcdID: ofcdID }),
                            contentType: "application/json; charset=utf-8",
                            success: function (response) {
                                $("#loader").hide();
                                $("#OFCDDiv").empty();
                                $("#OFCDDiv").append(response);
                                swal('Poof! Your Offline Consultation detail has been deleted!', {
                                    icon: 'success',
                                });
                            }
                        });
                    } else {
                        swal('Your offline consultation details is safe!');
                    }
                });
        }

        function deleteOcd(ocdID) {
            swal({
                title: 'Are you sure?',
                text: 'Once deleted, you will not be able to recover this Online Consultation detail!',
                icon: 'warning',
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        $("#loader").show();
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("DeleteOnlineConsultation", "Doctor")",
                            data: JSON.stringify({ OcdID: ocdID }),
                            contentType: "application/json; charset=utf-8",
                            success: function (response) {
                                $("#loader").hide();
                                $("#OCDDiv").empty();
                                $("#btnOCD").show();
                                $("#OCDDiv").append(response);
                                swal('Poof! Your Online Consultation detail has been deleted!', {
                                    icon: 'success',
                                });
                            }
                        });
                    } else {
                        swal('Your online consultation details is safe!');
                    }
                });
        }

    </script>
}
