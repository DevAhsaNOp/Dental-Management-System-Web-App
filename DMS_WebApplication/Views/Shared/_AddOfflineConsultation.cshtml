@model DMS_BOL.Validation_Classes.ValidateDoctorOfflineConsultaionDetails
<style>
    td {
        padding-right: 10px !important;
        font-size: 14px !important;
    }

    th {
        font-size: 18px !important;
        margin-bottom: 10px !important;
    }

    @@media screen and (min-width: 768px) {
        input[type=time] {
            width: 65% !important;
        }
    }
</style>

<div class="form-group" id="ToDateID">
    @Html.ValidationMessageFor(model => model.MinimumOnedayShouldBeAdded, "", new { @class = "text-danger" })
    @Html.EditorFor(model => model.MinimumOnedayShouldBeAdded, new { htmlAttributes = new { @class = "form-control", @tabindex = "5" } })
</div>
<div class="form-group">
    <label>Hospital Name</label>
    @Html.ValidationMessageFor(model => model.OFCD_HospitalName, "", new { @class = "text-danger" })
    @Html.EditorFor(model => model.OFCD_HospitalName, new { htmlAttributes = new { placeholder = "Enter hospital name", @class = "form-control", @tabindex = "1" } })
</div>
<div class="form-group">
    <label>Hospital Phone Number</label>
    @Html.ValidationMessageFor(model => model.OFCD_HospitalPhoneNumber, "", new { @class = "text-danger" })
    @Html.EditorFor(model => model.OFCD_HospitalPhoneNumber, new { htmlAttributes = new { placeholder = "Enter hospital phone number", @class = "form-control", @tabindex = "2" } })
</div>
<div class="row">
    <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6" id="StateD">
        <label>State</label>
        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        @Html.DropDownListFor(model => model.State, (IEnumerable<SelectListItem>)ViewBag.State, "---Select State---", htmlAttributes: new { @class = "form-control select2" })
    </div>
    <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6" id="CityD">
        <label>City</label>
        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        @Html.DropDownListFor(model => model.City, new SelectList(""), htmlAttributes: new { @class = "form-control select2" })
    </div>
</div>
<div class="row">
    <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6" id="AreaD">
        <label>Area</label>
        @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
        @Html.DropDownListFor(model => model.Area, new SelectList(""), htmlAttributes: new { @class = "form-control select2" })
    </div>
    <div class="form-group col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-6" id="AddressD">
        <label>Complete Address</label>
        @Html.ValidationMessageFor(model => model.CompleteAddress, "", new { @class = "text-danger" })
        @Html.EditorFor(model => model.CompleteAddress, new { htmlAttributes = new { placeholder = "Enter your complete address", @class = "form-control" } })
    </div>
</div>
<table style="width: 100%;">
    <tr>
        <th>Day</th>
        <th>Start Time</th>
        <th>End Time</th>
        <th>Availability</th>
    </tr>
    <tr>
        <td>Monday</td>
        <td>
            @Html.ValidationMessageFor(model => model.OFCD_MondayStartTime, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.OFCD_MondayStartTime, new { htmlAttributes = new { @tabindex = "3", @type = "time", @value="", @class = "form-control p-0" } })
        </td>
        <td>
            @Html.ValidationMessageFor(model => model.OFCD_MondayEndTime, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.OFCD_MondayEndTime, new { htmlAttributes = new { @tabindex = "3", @type = "time", @value = "", @class = "form-control p-0" } })
        </td>
        <td>
            <div class="pretty p-switch p-fill">
                <input type="checkbox" id="checkbox1" onchange="Avalvalidate(1)">
                <div class="state p-danger">
                    <label id="label1">Available</label>
                </div>
            </div>
        </td>
    </tr>
    <tr>
        <td>Tuesday</td>
        <td>
            @Html.ValidationMessageFor(model => model.OFCD_TuesdayStartTime, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.OFCD_TuesdayStartTime, new { htmlAttributes = new { @tabindex = "3", @type = "time", @value = "", @class = "form-control p-0" } })
        </td>
        <td>
            @Html.ValidationMessageFor(model => model.OFCD_TuesdayEndTime, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.OFCD_TuesdayEndTime, new { htmlAttributes = new { @tabindex = "3", @type = "time", @value = "", @class = "form-control p-0" } })
        </td>
        <td>
            <div class="pretty p-switch p-fill">
                <input type="checkbox" id="checkbox2" onchange="Avalvalidate(2)">
                <div class="state p-danger">
                    <label id="label2">Available</label>
                </div>
            </div>
        </td>
    </tr>
    <tr>
        <td>Wednesday</td>
        <td>
            @Html.ValidationMessageFor(model => model.OFCD_WednesdayStartTime, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.OFCD_WednesdayStartTime, new { htmlAttributes = new { @tabindex = "3", @type = "time", @class = "form-control p-0" } })
        </td>
        <td>
            @Html.ValidationMessageFor(model => model.OFCD_WednesdayEndTime, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.OFCD_WednesdayEndTime, new { htmlAttributes = new { @tabindex = "3", @type = "time", @class = "form-control p-0" } })
        </td>
        <td>
            <div class="pretty p-switch p-fill">
                <input type="checkbox" id="checkbox3" onchange="Avalvalidate(3)">
                <div class="state p-danger">
                    <label id="label3">Available</label>
                </div>
            </div>
        </td>
    </tr>
    <tr>
        <td>Thursday</td>
        <td>
            @Html.ValidationMessageFor(model => model.OFCD_ThursdayStartTime, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.OFCD_ThursdayStartTime, new { htmlAttributes = new { @tabindex = "3", @type = "time", @class = "form-control p-0" } })
        </td>
        <td>
            @Html.ValidationMessageFor(model => model.OFCD_ThursdayEndTime, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.OFCD_ThursdayEndTime, new { htmlAttributes = new { @tabindex = "3", @type = "time", @class = "form-control p-0" } })
        </td>
        <td>
            <div class="pretty p-switch p-fill">
                <input type="checkbox" id="checkbox4" onchange="Avalvalidate(4)">
                <div class="state p-danger">
                    <label id="label4">Available</label>
                </div>
            </div>
        </td>
    </tr>
    <tr>
        <td>Friday</td>
        <td>
            @Html.ValidationMessageFor(model => model.OFCD_FridayStartTime, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.OFCD_FridayStartTime, new { htmlAttributes = new { @tabindex = "3", @type = "time", @class = "form-control p-0" } })
        </td>
        <td>
            @Html.ValidationMessageFor(model => model.OFCD_FridayEndTime, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.OFCD_FridayEndTime, new { htmlAttributes = new { @tabindex = "3", @type = "time", @class = "form-control p-0" } })
        </td>
        <td>
            <div class="pretty p-switch p-fill">
                <input type="checkbox" id="checkbox5" onchange="Avalvalidate(5)">
                <div class="state p-danger">
                    <label id="label5">Available</label>
                </div>
            </div>
        </td>
    </tr>
    <tr>
        <td>Saturday</td>
        <td>
            @Html.ValidationMessageFor(model => model.OFCD_SaturdayStartTime, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.OFCD_SaturdayStartTime, new { htmlAttributes = new { @tabindex = "3", @type = "time", @class = "form-control p-0" } })
        </td>
        <td>
            @Html.ValidationMessageFor(model => model.OFCD_SaturdayEndTime, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.OFCD_SaturdayEndTime, new { htmlAttributes = new { @tabindex = "3", @type = "time", @class = "form-control p-0" } })
        </td>
        <td>
            <div class="pretty p-switch p-fill">
                <input type="checkbox" id="checkbox6" onchange="Avalvalidate(6)">
                <div class="state p-danger">
                    <label id="label6">Available</label>
                </div>
            </div>
        </td>
    </tr>
    <tr>
        <td>Sunday</td>
        <td>
            @Html.ValidationMessageFor(model => model.OFCD_SundayStartTime, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.OFCD_SundayStartTime, new { htmlAttributes = new { @tabindex = "3", @type = "time", @class = "form-control p-0" } })
        </td>
        <td>
            @Html.ValidationMessageFor(model => model.OFCD_SundayEndTime, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.OFCD_SundayEndTime, new { htmlAttributes = new { @tabindex = "3", @type = "time", @class = "form-control p-0" } })
        </td>
        <td>
            <div class="pretty p-switch p-fill">
                <input type="checkbox" id="checkbox7" onchange="Avalvalidate(7)">
                <div class="state p-danger">
                    <label id="label7">Available</label>
                </div>
            </div>
        </td>
    </tr>
</table>
<div class="form-group">
    <label>Consultation Charges</label>
    @Html.ValidationMessageFor(model => model.OFCD_Charges, "", new { @class = "text-danger" })
    @Html.EditorFor(model => model.OFCD_Charges, new { htmlAttributes = new { @class = "form-control", @tabindex = "4", @placeholder = "Enter hospital consultation charges", } })
</div>
<script>
    function Avalvalidate(el) {
        var remember = document.getElementById("checkbox" + el);
        if (remember.checked) {
            document.getElementById("label" + el).innerText = "Not Available";
        } else {
            document.getElementById("label" + el).innerText = "Available";
        }
    }

    $(document).ready(function () {
        $('#CityD').hide();
        $('#AreaD').hide();
        $('#TxtOTP').hide();
        $('#AddressD').hide();

        $("#State").change(function () {
            var StateId = $(this).val();
            $(".loader").show();
            $.ajax({
                type: "post",
                url: "/Account/GetCityList?StateId=" + StateId,
                contentType: "html",
                success: function (response) {
                    $("#City").empty();
                    $("#Area").empty();
                    $('#AreaD').hide();
                    $('#AddressD').hide();
                    $("#City").append(response);
                    $('#CityD').show();
                    $(".loader").hide();
                }
            })
        })

        $("#City").change(function () {
            var CityId = $(this).val();
            $(".loader").show();
            $.ajax({
                type: "post",
                url: "/Account/GetZoneList?CityId=" + CityId,
                contentType: "html",
                success: function (response) {
                    $("#Area").empty();
                    $("#Area").append(response);
                    $('#AreaD').show();
                    $(".loader").hide();
                }
            })
        })

        $("#Area").change(function () {
            var AreaId = $(this).val();
            $(".loader").show();
            if (AreaId > 0) {
                $('#AddressD').show();
                $(".loader").hide();
            }
        })
    })
</script>